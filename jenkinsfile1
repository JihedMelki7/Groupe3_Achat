pipeline {
    agent {
             kubernetes {
            label 'kubeagent'
            yaml """
            apiVersion: v1
            kind: Pod
            spec:
              containers:
              - name: docker
                image: docker:1.8.1
                command:
                - sleep
                args:
                - "9999999"
                volumeMounts:
                - name: docker-sock
                  mountPath: /var/run/docker.sock
              volumes:
              - name: docker-sock
                hostPath:
                  path: /var/run/docker.sock
            """
        }
    }
        tools {
    maven "Maven"
    dockerTool "docker"   
   }

    stages {
        stage('Checkout Git') {
            steps {
                echo 'Pulling...'
                git branch: 'facture-achref',
                    url: 'https://github.com/JihedMelki7/Groupe3_Achat.git'
            }
        }
        stage('Clean') {
            steps {
                script {
                    // Clean the project
                    sh 'mvn clean'
                }
            }
        }
        stage('Compile') {
            steps {
                script {
                    // Compile the project
                    sh 'mvn compile'
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonarqueb') {
                    sh "mvn sonar:sonar"
                }
            }
        }
        stage('MVN TEST') {
            steps {
                sh 'mvn test'
            }
        }
        stage('Nexus') {
            steps {
                script {
                    // Execute the "mvn deploy" command while skipping tests
                    sh 'mvn deploy -DskipTests'
                }
            }
        }
        stage('BUILD IMAGE') {
            steps {
                container('docker') {
                    sh 'docker build -t achat:1-0 .'
                }
            }
        }
        stage('Push vers Docker Hub') {
            steps {
                script {
                    def dockerHubImageName = "achrefdoce/chat:latest"
                    withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]) {
                        sh 'docker login -u achrefdoce -p ${dockerhub}'
                        sh "docker tag achat:1-0 $dockerHubImageName"
                        sh "docker push $dockerHubImageName"
                    }
                }
            }
        }
    }
}
