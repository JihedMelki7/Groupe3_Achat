pipeline {
   agent {
    openshift {
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: docker
            image: docker:latest
            command:
            - cat
            tty: true
    }
  }
    tools {
        maven "Maven" // Ensure the string is properly closed

    }

    stages {
        stage('Checkout Git') {
            steps {
                echo 'Pulling...'
                git branch: 'facture-achref',
                    url: 'https://github.com/JihedMelki7/Groupe3_Achat.git' // Ensure proper use of colons
            }
        }

        stage('Clean') {
            steps {
                script {
                    // Clean the project
                    sh 'mvn clean'
                }
            }
        }

        stage('Compile') {
            steps {
                script {
                    // Compile the project
                    sh 'mvn compile'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonarqueb') {
                    sh "mvn sonar:sonar"
                }
            }
        }

        stage('MVN TEST') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Nexus') {
            steps {
                script {
                    // Ex√©cute la commande "mvn deploy" en sautant les tests
                    sh 'mvn deploy -DskipTests '         
                }
            }
        }

        stage('BUILD IMAGE') {
            steps {
             container('docker') {       
                sh 'docker build -t achat:1-0 .'
            }
        }
       }
        stage('Push vers Docker Hub') {
            steps {
                script {
                    def dockerHubImageName = "achrefdoce/chat:latest"
                    withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]) {
                        sh 'docker login -u achrefdoce -p ${dockerhub}'
                        sh "docker tag achat:1-0 $dockerHubImageName"
                        sh "docker push $dockerHubImageName"
                    }
                }
            }
        }

      
    }
}
